# See documentation at: https://pre-commit.com/
# To use:
#
#     pre-commit run -a --skip flake8,black
#     pre-commit run black --all-files
#
# Or:
#
#     pre-commit install  # (runs every time you commit)
#     pre-commit install  --hook-type pre-push  # (runs every time you push)
#
# Uninstall:
#
#     pre-commit uninstall
#
# How to prevent running it:
#
#     git options: --no-verify or -n
#     git commit -n -m "YOUR COMMIT MESSAGE"
#
# To update this file:
#
#     pre-commit autoupdate
#
# See https://github.com/pre-commit/pre-commit

ci:
  autoupdate_commit_msg: "chore: update pre-commit hooks"
  autofix_commit_msg: "style: pre-commit fixes"

fail_fast: True # set to true to have pre-commit stop running hooks after the first failure.

default_stages: [pre-commit]

repos:
  # Standard hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-yaml
        exclude: ^conda\.recipe/meta\.yaml$
      - id: check-toml
      - id: debug-statements
      - id: mixed-line-ending
      - id: end-of-file-fixer
        stages: [push]
      - id: trailing-whitespace
        stages: [push]

  # Runs Black
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        language_version: python3.11
        args: [--target-version=py311, --line-length=120, --preview]

  # Pre commit rust
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      - id: fmt
      - id: cargo-check
      - id: clippy
        args: [--all-targets]
